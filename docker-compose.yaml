version: '3'

volumes:
  minio_data:
  mlflow:
  postgres_data:

services:
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  airflow:
    build:
      context: ./airflow
      dockerfile: Dockerfile
    container_name: airflow
    depends_on:
      - minio
    environment:
      AIRFLOW__WEBSERVER__SHOW_TRIGGER_FORM_IF_NO_PARAMS: True
      AIRFLOW__ELASTICSEARCH__WRITE_STDOUT: True
    ports:
      - "8080:8080"
    volumes:
      - ./airflow/airflow.cfg:/opt/airflow/airflow.cfg
    #   - ./dags:/opt/airflow/dags
    #   - ./logs:/opt/airflow/logs

  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.3.0
    command: ["milvus", "run", "standalone"]
    security_opt:
      - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"

  attu:
    container_name: milvus-attu
    image: zilliz/attu:latest
    ports:
      - "8002:3000"
    environment:
      MILVUS_URL: standalone:19530
    depends_on:
      - "etcd"
      - "minio"
      - "standalone"

  embedding_service:
    container_name: embedding-service
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - MLFLOW_S3_IGNORE_TLS=true
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
    build:
      context: ./embedding_service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - "standalone"
      - "minio"
    restart: always

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: mlflow
      POSTGRES_PASSWORD: mlflow
      POSTGRES_DB: mlflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mlflow:
    build:
      context: ./mlflow
      dockerfile: Dockerfile
    container_name: mlflow
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      MLFLOW_S3_IGNORE_TLS: 'true'
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
    ports:
      - "5000:5000"
    volumes:
      - mlflow:/mlflow
    command: mlflow server --default-artifact-root minio://user-data --backend-store-uri postgresql://mlflow:mlflow@postgres/mlflow --host 0.0.0.0
    depends_on:
      - minio
      - postgres
